@page "/login"
@using EventManagement.Client.Services
@using EventManagement.Common.Dto
@inject AuthenticationService AuthService
@inject CustomAuthStateProvider AuthStateProvider
@inject NavigationManager Navigation

<h3>Login</h3>
<EditForm Model="loginDto" OnValidSubmit="HandleLogin">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <InputText @bind-Value="loginDto.Username" placeholder="Username" />
    <InputText @bind-Value="loginDto.Password" placeholder="Password" type="password" />
    <button type="submit">Login</button>
</EditForm>

<p>@errorMessage</p>

@code {
    private UserLoginDto loginDto = new();
    private string errorMessage;

    private async Task HandleLogin()
    {
        var token = await AuthService.Login(loginDto);
        if (token != null)
        {
            AuthStateProvider.NotifyUserAuthentication(token);
            Navigation.NavigateTo("/events");
        }
        else
        {
            errorMessage = "Invalid login attempt.";
        }
    }
}
